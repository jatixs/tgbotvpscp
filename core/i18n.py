# /opt/tg-bot/core/i18n.py
import json
import logging
import os
from aiogram import F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from . import config
from . import shared_state

# --- –°–õ–û–í–ê–†–¨ –ü–ï–†–ï–í–û–î–û–í ---
STRINGS = {
    'ru': {
        # –û–±—â–∏–µ
        "btn_back": "üîô –ù–∞–∑–∞–¥",
        "btn_cancel": "‚ùå –û—Ç–º–µ–Ω–∞",
        "btn_back_to_menu": "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        "btn_confirm": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
        "status_enabled": "‚úÖ",
        "status_disabled": "‚ùå",
        "group_admins": "–ê–¥–º–∏–Ω—ã",
        "group_users": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
        "group_unknown": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        "error_internal": "‚ö†Ô∏è –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞.",
        "error_unexpected": "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.",
        "error_with_details": "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}",
        "error_parsing_json": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞.\n<pre>{output}</pre>",
        "error_unexpected_json_parsing": "‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {error}",

        # bot.py (–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ø–∑—ã–∫)
        "main_menu_welcome": "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –Ω–∏–∂–µ. –ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É–π /menu.",
        "language_select": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —è–∑—ã–∫:",
        "language_selected": "‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ –†—É—Å—Å–∫–∏–π.",
        "btn_language": "üá∑üá∫ –Ø–∑—ã–∫",
        "main_menu_placeholder": "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –≤ –º–µ–Ω—é...",

        # core/auth.py
        "access_denied_message": "‚õî –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞. –í–∞—à ID: <code>{user_id}</code>.\n–ö –∫–æ–º–∞–Ω–¥–∞–º –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
        "access_denied_button": "üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É",
        "access_denied_generic": "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.",
        "access_denied_not_root": "‚õî –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ 'root'.",
        "access_denied_no_rights": "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.",
        "default_admin_name": "–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω",
        "default_new_user_name": "–ù–æ–≤—ã–π_{uid}",
        "default_id_user_name": "ID: {uid}",

        # core/keyboards.py (–ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é)
        "btn_selftest": "üõ† –°–≤–µ–¥–µ–Ω–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ",
        "btn_traffic": "üì° –¢—Ä–∞—Ñ–∏–∫ —Å–µ—Ç–∏",
        "btn_uptime": "‚è± –ê–ø—Ç–∞–π–º",
        "btn_speedtest": "üöÄ –°–∫–æ—Ä–æ—Å—Ç—å —Å–µ—Ç–∏",
        "btn_top": "üî• –¢–æ–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
        "btn_xray": "ü©ª –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ X-ray",
        "btn_sshlog": "üìú SSH-–ª–æ–≥",
        "btn_fail2ban": "üîí Fail2Ban Log",
        "btn_logs": "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è",
        "btn_users": "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
        "btn_vless": "üîó VLESS-—Å—Å—ã–ª–∫–∞",
        "btn_update": "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ VPS",
        "btn_optimize": "‚ö°Ô∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
        "btn_restart": "‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞",
        "btn_reboot": "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
        "btn_notifications": "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",

        # core/keyboards.py (–ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏)
        "btn_add_user": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "btn_delete_user": "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "btn_change_group": "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É",
        "btn_my_id": "üÜî –ú–æ–π ID",
        "delete_user_button_text": "{user_name} ({group})",
        "delete_self_button_text": "‚ùå –£–¥–∞–ª–∏—Ç—å —Å–µ–±—è ({user_name}, {group})",
        "btn_group_admins": "üëë –ê–¥–º–∏–Ω—ã",
        "btn_group_users": "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
        "btn_reboot_confirm": "‚úÖ –î–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å",
        "btn_reboot_cancel": "‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞",
        "alerts_menu_res": "{status} –†–µ—Å—É—Ä—Å—ã (CPU/RAM/Disk)",
        "alerts_menu_logins": "{status} –í—Ö–æ–¥—ã SSH",
        "alerts_menu_bans": "{status} –ë–∞–Ω—ã (Fail2Ban)",
        "alerts_menu_downtime": "‚è≥ –î–∞—É–Ω—Ç–∞–π–º —Å–µ—Ä–≤–µ—Ä–∞ (WIP)",

        # core/utils.py
        "utils_vless_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VLESS-—Å—Å—ã–ª–∫–∏: {error}",
        "utils_docker_ps_error": "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å 'docker ps'. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω, –∏ —É –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞.\n<pre>{error}</pre>",
        "utils_bot_restarted": "‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.",
        "utils_server_rebooted": "‚úÖ <b>–°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω! –ë–æ—Ç —Å–Ω–æ–≤–∞ –≤ —Å–µ—Ç–∏.</b>",

        # core/messaging.py
        "alert_no_users_for_type": "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ —Ç–∏–ø–∞ '{alert_type}'.",
        "alert_sending_to_users": "–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞ —Ç–∏–ø–∞ '{alert_type}' {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...",
        "alert_sent_to_users": "–ê–ª–µ—Ä—Ç —Ç–∏–ø–∞ '{alert_type}' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.",

        # watchdog.py
        "watchdog_alert_prefix": "üö® <b>–°–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π (Alert):</b>",
        "watchdog_log_read_error": "–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–∞: {error}",
        "watchdog_log_error_found_details": "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–®–ò–ë–ö–ê: {details}",
        "watchdog_log_error_found_generic": "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ (ERROR/CRITICAL) –≤ –ª–æ–≥–µ",
        "watchdog_log_exception": "–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–æ–≥–∞: {error}",
        "watchdog_status_active_ok": "–°–µ—Ä–≤–∏—Å <b>{bot_name}</b>: –ê–∫—Ç–∏–≤–µ–Ω üü¢",
        "watchdog_status_active_error": "–°–µ—Ä–≤–∏—Å <b>{bot_name}</b>: –ê–∫—Ç–∏–≤–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏ üü†\n\n<b>–î–µ—Ç–∞–ª–∏:</b> {details}\n\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å `bot.log`.",
        "watchdog_status_active_log_fail": "–°–µ—Ä–≤–∏—Å <b>{bot_name}</b>: –ê–∫—Ç–∏–≤–µ–Ω üü¢ (–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å)",
        "watchdog_status_activating": "–°–µ—Ä–≤–∏—Å <b>{bot_name}</b>: –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è üü°",
        "watchdog_status_down": "–°–µ—Ä–≤–∏—Å <b>{bot_name}</b>: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω üî¥{reason}",
        "watchdog_status_down_reason": "–ü—Ä–∏—á–∏–Ω–∞",
        "watchdog_status_down_failed": "–°—Ç–∞—Ç—É—Å: failed",
        "watchdog_restart_fail": "‚ö†Ô∏è Alert-—Å–∏—Å—Ç–µ–º–∞ –ù–ï –°–ú–û–ì–õ–ê –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –¥–ª—è <b>{service_name}</b>. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞.\n–û—à–∏–±–∫–∞: {error}",
        "watchdog_systemctl_not_found": "‚ö†Ô∏è <code>systemctl</code> –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞.",
        "watchdog_check_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞: {error}",
        "watchdog_started": "üö® –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–µ—Ä–≤–∏—Å '–°–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π (Alert)' –∑–∞–ø—É—â–µ–Ω.\n–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: <b>{bot_name}</b>",

        # modules/fail2ban.py
        "f2b_log_not_found": "‚ö†Ô∏è –§–∞–π–ª –ª–æ–≥–∞ Fail2Ban –Ω–µ –Ω–∞–π–¥–µ–Ω: <code>{path}</code>",
        "f2b_log_read_error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –ª–æ–≥–∞.",
        "f2b_banned": "–ë–∞–Ω",
        "f2b_already_banned": "–£–∂–µ –∑–∞–±–∞–Ω–µ–Ω",
        "f2b_header": "üîí <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ IP (Fail2Ban):</b>\n\n{log_output}",
        "f2b_no_bans": "üîí –ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ IP –≤ –ª–æ–≥–∞—Ö Fail2Ban (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ 50 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Ç—Ä–æ–∫).",
        "f2b_read_error_generic": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∂—É—Ä–Ω–∞–ª–∞ Fail2Ban: {error}",
        "f2b_ban_entry": "üîí <b>{ban_type}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ –í—Ä–µ–º—è: <b>{time}</b>{tz}\nüóìÔ∏è –î–∞—Ç–∞: <b>{date}</b>",

        # modules/logs.py
        "logs_header": "üìú <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∂—É—Ä–Ω–∞–ª—ã:</b>\n<pre>{log_output}</pre>",
        "logs_read_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∂—É—Ä–Ω–∞–ª–æ–≤: {error}",

        # modules/notifications.py
        "notifications_menu_title": "üîî <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å.",
        "notifications_toggle_alert": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è '{alert_name}' {status}",
        "notifications_status_on": "‚úÖ –í–ö–õ–Æ–ß–ï–ù–´",
        "notifications_status_off": "‚ùå –û–¢–ö–õ–Æ–ß–ï–ù–´",
        "notifications_alert_name_res": "–†–µ—Å—É—Ä—Å—ã",
        "notifications_alert_name_logins": "–í—Ö–æ–¥—ã/–í—ã—Ö–æ–¥—ã SSH",
        "notifications_alert_name_bans": "–ë–∞–Ω—ã",
        "notifications_downtime_stub": "‚è≥ –§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–∞—É–Ω—Ç–∞–π–º–µ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n–ü–æ–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, UptimeRobot).",
        "alert_ssh_login_detected": "üîî <b>–û–±–Ω–∞—Ä—É–∂–µ–Ω –≤—Ö–æ–¥ SSH</b>\n\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ –í—Ä–µ–º—è: <b>{time}</b>{tz}",
        "alert_f2b_ban_detected": "üõ°Ô∏è <b>Fail2Ban –∑–∞–±–∞–Ω–∏–ª IP</b>\n\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ –í—Ä–µ–º—è: <b>{time}</b>{tz}",
        "alert_cpu_high": "‚ö†Ô∏è <b>–ü—Ä–µ–≤—ã—à–µ–Ω –ø–æ—Ä–æ–≥ CPU!</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b> (–ü–æ—Ä–æ–≥: {threshold}%)",
        "alert_cpu_high_repeat": "‚ÄºÔ∏è <b>CPU –≤—Å–µ –µ—â–µ –í–´–°–û–ö–ò–ô!</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b> (–ü–æ—Ä–æ–≥: {threshold}%)",
        "alert_cpu_normal": "‚úÖ <b>–ù–∞–≥—Ä—É–∑–∫–∞ CPU –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª–∞—Å—å.</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b>",
        "alert_ram_high": "‚ö†Ô∏è <b>–ü—Ä–µ–≤—ã—à–µ–Ω –ø–æ—Ä–æ–≥ RAM!</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b> (–ü–æ—Ä–æ–≥: {threshold}%)",
        "alert_ram_high_repeat": "‚ÄºÔ∏è <b>RAM –≤—Å–µ –µ—â–µ –í–´–°–û–ö–ê–Ø!</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b> (–ü–æ—Ä–æ–≥: {threshold}%)",
        "alert_ram_normal": "‚úÖ <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RAM –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª–æ—Å—å.</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b>",
        "alert_disk_high": "‚ö†Ô∏è <b>–ü—Ä–µ–≤—ã—à–µ–Ω –ø–æ—Ä–æ–≥ Disk!</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b> (–ü–æ—Ä–æ–≥: {threshold}%)",
        "alert_disk_high_repeat": "‚ÄºÔ∏è <b>Disk –≤—Å–µ –µ—â–µ –í–´–°–û–ö–ò–ô!</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b> (–ü–æ—Ä–æ–≥: {threshold}%)",
        "alert_disk_normal": "‚úÖ <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Disk –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª–æ—Å—å.</b>\n–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <b>{usage:.1f}%</b>",

        # modules/optimize.py
        "optimize_start": "‚è≥ <b>–ó–∞–ø—É—Å–∫–∞—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã...</b>\n\n–≠—Ç–æ –æ—á–µ–Ω—å –¥–æ–ª–≥–∏–π –ø—Ä–æ—Ü–µ—Å—Å (5-15 –º–∏–Ω—É—Ç).\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–π—Ç–µ –±–æ—Ç–∞ –∏ –Ω–µ –≤—ã–∑—ã–≤–∞–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã.",
        "optimize_success": "‚úÖ <b>–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</b>\n\n<b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ –≤—ã–≤–æ–¥–∞ (–≤–∫–ª—é—á–∞—è sysctl):</b>\n<pre>{output}</pre>",
        "optimize_fail": "‚ùå <b>–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏!</b>\n\n<b>–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞:</b> {code}\n<b>–í—ã–≤–æ–¥ STDOUT (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000):</b>\n<pre>{stdout}</pre>\n<b>–í—ã–≤–æ–¥ STDERR (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 2000):</b>\n<pre>{stderr}</pre>",

        # modules/reboot.py
        "reboot_confirm_prompt": "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ <b>–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä</b>? –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –±—É–¥—É—Ç —Ä–∞–∑–æ—Ä–≤–∞–Ω—ã.",
        "reboot_confirmed": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ. <b>–ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É VPS</b>...",
        "reboot_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {error}",

        # modules/restart.py
        "restart_start": "‚ôªÔ∏è –ë–æ—Ç —É—Ö–æ–¥–∏—Ç –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫‚Ä¶",
        "restart_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {error}",

        # modules/selftest.py
        "selftest_gathering_info": "üîç –°–æ–±–∏—Ä–∞—é —Å–≤–µ–¥–µ–Ω–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ...",
        "selftest_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {error}",
        "selftest_inet_ok": "‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω",
        "selftest_inet_fail": "‚ùå –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞",
        "selftest_ip_fail": "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å",
        "selftest_ssh_source": "(–∏–∑ {source})",
        "selftest_ssh_source_journal": "(–∏–∑ journalctl)",
        "selftest_ssh_header": "\n\nüìÑ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π SSH-–≤—Ö–æ–¥{source}:</b>\n",
        "selftest_ssh_entry": "üë§ <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ –í—Ä–µ–º—è: <b>{time}</b>{tz}\nüóìÔ∏è –î–∞—Ç–∞: <b>{date}</b>",
        "selftest_ssh_parse_fail": "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å—Ç—Ä–æ–∫—É –ª–æ–≥–∞.",
        "selftest_ssh_not_found": "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π.",
        "selftest_ssh_read_error": "‚è≥ –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤: {error}",
        "selftest_ssh_root_only": "\n\nüìÑ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π SSH-–≤—Ö–æ–¥:</b>\n<i>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ root</i>",
        "selftest_results_header": "üõ† <b>–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞:</b>\n\n",
        "selftest_results_body": "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\nüìä –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: <b>{cpu:.1f}%</b>\nüíæ –û–ó–£: <b>{mem:.1f}%</b>\nüíΩ –ü–ó–£: <b>{disk:.1f}%</b>\n‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: <b>{uptime}</b>\n{inet_status}\n‚åõ –ó–∞–¥–µ—Ä–∂–∫–∞ (8.8.8.8): <b>{ping} –º—Å</b>\nüåê –í–Ω–µ—à–Ω–∏–π IP: <code>{ip}</code>\nüì° –¢—Ä–∞—Ñ–∏–∫ ‚¨á <b>{rx}</b> / ‚¨Ü <b>{tx}</b>",

        # modules/speedtest.py
        "speedtest_start": "üöÄ –ó–∞–ø—É—Å–∫ speedtest... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã.",
        "speedtest_results": "üöÄ <b>Speedtest –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>\n\n‚¨áÔ∏è <b>–°–∫–∞—á–∏–≤–∞–Ω–∏–µ:</b> {dl:.2f} –ú–±–∏—Ç/—Å\n‚¨ÜÔ∏è <b>–ó–∞–≥—Ä—É–∑–∫–∞:</b> {ul:.2f} –ú–±–∏—Ç/—Å\n‚è± <b>–ü–∏–Ω–≥:</b> {ping} –º—Å\n\nüè¢ <b>–°–µ—Ä–≤–µ—Ä:</b> {server} ({location})\nüîó <b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b> {url}",
        "speedtest_fail": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ speedtest:\n<pre>{error}</pre>",

        # modules/sshlog.py
        "sshlog_searching": "üîç –ò—â—É –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–±—ã—Ç–∏–π SSH (–≤—Ö–æ–¥/–ø—Ä–æ–≤–∞–ª)...",
        "sshlog_header": "üîê <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ {count} —Å–æ–±—ã—Ç–∏–π SSH{source}:</b>\n\n{log_output}",
        "sshlog_not_found": "üîê –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π SSH (–≤—Ö–æ–¥/–ø—Ä–æ–≤–∞–ª){source}.",
        "sshlog_read_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∂—É—Ä–Ω–∞–ª–∞ SSH: {error}",
        "sshlog_entry_success": "‚úÖ <b>–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥</b>\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",
        "sshlog_entry_invalid_user": "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —é–∑–µ—Ä</b>\nüë§ –ü–æ–ø—ã—Ç–∫–∞: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",
        "sshlog_entry_wrong_pass": "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å</b>\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",
        "sshlog_entry_fail_pam": "‚ùå <b>–ü—Ä–æ–≤–∞–ª (PAM)</b>\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",

        # modules/top.py
        "top_header": "üî• <b>–¢–æ–ø 10 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ CPU:</b>\n<pre>{output}</pre>",
        "top_fail": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:\n<pre>{error}</pre>",

        # modules/traffic.py
        "traffic_stop": "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–∞—Ñ–∏–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.",
        "traffic_menu_return": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        "traffic_start": "üì° <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–∞—Ñ–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω</b>...\n\n<i>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ù–∞–∂–º–∏—Ç–µ 'üì° –¢—Ä–∞—Ñ–∏–∫ —Å–µ—Ç–∏' –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.</i>",
        "traffic_start_fail": "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–∞—Ñ–∏–∫–∞: {error}",
        "traffic_update_total": "üì° –û–±—â–∏–π —Ç—Ä–∞—Ñ–∏–∫:",
        "traffic_update_speed": "‚ö°Ô∏è –°–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:",
        "traffic_rx": "‚¨áÔ∏è RX: {value}",
        "traffic_tx": "‚¨ÜÔ∏è TX: {value}",
        "traffic_speed_rx": "‚¨áÔ∏è RX: {speed:.2f} –ú–±–∏—Ç/—Å",
        "traffic_speed_tx": "‚¨ÜÔ∏è TX: {speed:.2f} –ú–±–∏—Ç/—Å",

        # modules/update.py
        "update_start": "üîÑ –í—ã–ø–æ–ª–Ω—è—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ VPS... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.",
        "update_success": "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:\n<pre>{output}</pre>",
        "update_fail": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ (–ö–æ–¥: {code}):\n<pre>{error}</pre>",

        # modules/uptime.py
        "uptime_text": "‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: <b>{uptime}</b>",
        "uptime_fail": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–ø—Ç–∞–π–º–∞: {error}",

        # modules/vless.py
        "vless_prompt_file": "üì§ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Xray (JSON)</b>\n\n<i>–í–∞–∂–Ω–æ: —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–±–æ—á—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é outbound —Å Reality.</i>",
        "vless_error_not_json": "‚õî <b>–û—à–∏–±–∫–∞:</b> –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ <code>.json</code>.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –µ—â–µ —Ä–∞–∑.",
        "vless_prompt_name": "‚úÖ –§–∞–π–ª JSON –ø–æ–ª—É—á–µ–Ω.\n\n–¢–µ–ø–µ—Ä—å <b>–≤–≤–µ–¥–∏—Ç–µ –∏–º—è</b> –¥–ª—è —ç—Ç–æ–π VLESS-—Å—Å—ã–ª–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'My_Server_1'):",
        "vless_error_file_processing": "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {error}",
        "vless_error_no_json_session": "‚ö†Ô∏è –û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ JSON –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–µ—Å—Å–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞.",
        "vless_success_caption": "‚úÖ –í–∞—à–∞ VLESS-—Å—Å—ã–ª–∫–∞ —Å –∏–º–µ–Ω–µ–º '<b>{name}</b>' –≥–æ—Ç–æ–≤–∞:\n\n<code>{url}</code>",
        "vless_menu_return": "üè† –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        "vless_error_not_file": "‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b>–¥–æ–∫—É–º–µ–Ω—Ç</b> (—Ñ–∞–π–ª), –∞ –Ω–µ —Ç–µ–∫—Å—Ç.",
        "vless_error_not_text": "‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b>—Ç–µ–∫—Å—Ç–æ–≤–æ–µ –∏–º—è</b>.",

        # modules/xray.py
        "xray_detecting": "üîç –û–ø—Ä–µ–¥–µ–ª—è—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Xray...",
        "xray_detect_fail": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç Xray (Marzban, Amnezia). –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.",
        "xray_detected_start_update": "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω: <b>{client}</b> (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: <code>{container}</code>). –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...",
        "xray_update_error": "–ü—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {client} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:\n<pre>{error}</pre>",
        "xray_update_success": "‚úÖ Xray –¥–ª—è <b>{client}</b> —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ <b>{version}</b>",
        "xray_error_generic": "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Xray:</b>\n\n{error}",
        "xray_version_unknown": "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π",

        # modules/users.py (–î–æ–±–∞–≤–ª–µ–Ω–∏—è)
        "users_group_Admins": "–ê–¥–º–∏–Ω—ã",
        "users_group_–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
    },
    'en': {
        # –û–±—â–∏–µ
        "btn_back": "üîô Back",
        "btn_cancel": "‚ùå Cancel",
        "btn_back_to_menu": "üîô Back to menu",
        "btn_confirm": "‚úÖ Confirm",
        "status_enabled": "‚úÖ",
        "status_disabled": "‚ùå",
        "group_admins": "Admins",
        "group_users": "Users",
        "group_unknown": "Unknown",
        "error_internal": "‚ö†Ô∏è Internal error.",
        "error_unexpected": "‚ö†Ô∏è An error occurred.",
        "error_with_details": "‚ö†Ô∏è An error occurred: {error}",
        "error_parsing_json": "‚ùå Error processing results: Invalid response format.\n<pre>{output}</pre>",
        "error_unexpected_json_parsing": "‚ùå Unexpected error processing results: {error}",

        # bot.py (–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ø–∑—ã–∫)
        "main_menu_welcome": "üëã Hi! Choose a command from the keyboard below. To show this menu again, use /menu.",
        "language_select": "Please select your language:",
        "language_selected": "‚úÖ Language successfully changed to English.",
        "btn_language": "üá¨üáß Language",
        "main_menu_placeholder": "Select an option from the menu...",

        # core/auth.py
        "access_denied_message": "‚õî You are not an authorized user of this bot. Your ID: <code>{user_id}</code>.\nAccess to commands is denied. Please contact the administrator.",
        "access_denied_button": "üì§ Send your ID to the administrator",
        "access_denied_generic": "‚õî Access denied.",
        "access_denied_not_root": "‚õî This feature is only available in 'root' mode.",
        "access_denied_no_rights": "‚õî You do not have permission to execute this command.",
        "default_admin_name": "Main Admin",
        "default_new_user_name": "New_{uid}",
        "default_id_user_name": "ID: {uid}",

        # core/keyboards.py (–ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é)
        "btn_selftest": "üõ† Server Info",
        "btn_traffic": "üì° Network Traffic",
        "btn_uptime": "‚è± Uptime",
        "btn_speedtest": "üöÄ Speedtest",
        "btn_top": "üî• Top Processes",
        "btn_xray": "ü©ª Update X-ray",
        "btn_sshlog": "üìú SSH Log",
        "btn_fail2ban": "üîí Fail2Ban Log",
        "btn_logs": "üìú Recent Events",
        "btn_users": "üë§ Users",
        "btn_vless": "üîó VLESS Link",
        "btn_update": "üîÑ Update VPS",
        "btn_optimize": "‚ö°Ô∏è Optimize",
        "btn_restart": "‚ôªÔ∏è Restart Bot",
        "btn_reboot": "üîÑ Reboot Server",
        "btn_notifications": "üîî Notifications",

        # core/keyboards.py (–ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏)
        "btn_add_user": "‚ûï Add User",
        "btn_delete_user": "‚ûñ Delete User",
        "btn_change_group": "üîÑ Change Group",
        "btn_my_id": "üÜî My ID",
        "delete_user_button_text": "{user_name} ({group})",
        "delete_self_button_text": "‚ùå Delete myself ({user_name}, {group})",
        "btn_group_admins": "üëë Admins",
        "btn_group_users": "üë§ Users",
        "btn_reboot_confirm": "‚úÖ Yes, reboot",
        "btn_reboot_cancel": "‚ùå No, cancel",
        "alerts_menu_res": "{status} Resources (CPU/RAM/Disk)",
        "alerts_menu_logins": "{status} SSH Logins",
        "alerts_menu_bans": "{status} Bans (Fail2Ban)",
        "alerts_menu_downtime": "‚è≥ Server Downtime (WIP)",

        # core/utils.py
        "utils_vless_error": "‚ö†Ô∏è Error generating VLESS link: {error}",
        "utils_docker_ps_error": "Failed to execute 'docker ps'. Ensure Docker is installed, running, and the bot has permissions.\n<pre>{error}</pre>",
        "utils_bot_restarted": "‚úÖ Bot restarted successfully.",
        "utils_server_rebooted": "‚úÖ <b>Server rebooted successfully! The bot is back online.</b>",

        # core/messaging.py
        "alert_no_users_for_type": "No users with notifications enabled for type '{alert_type}'.",
        "alert_sending_to_users": "Sending alert type '{alert_type}' to {count} users...",
        "alert_sent_to_users": "Alert type '{alert_type}' sent to {count} users.",

        # watchdog.py
        "watchdog_alert_prefix": "üö® <b>Alert System:</b>",
        "watchdog_log_read_error": "Log read error: {error}",
        "watchdog_log_error_found_details": "ERROR detected: {details}",
        "watchdog_log_error_found_generic": "Errors (ERROR/CRITICAL) detected in log",
        "watchdog_log_exception": "Exception reading log: {error}",
        "watchdog_status_active_ok": "Service <b>{bot_name}</b>: Active üü¢",
        "watchdog_status_active_error": "Service <b>{bot_name}</b>: Active with errors üü†\n\n<b>Details:</b> {details}\n\nPlease check `bot.log`.",
        "watchdog_status_active_log_fail": "Service <b>{bot_name}</b>: Active üü¢ (Log check failed)",
        "watchdog_status_activating": "Service <b>{bot_name}</b>: Activating üü°",
        "watchdog_status_down": "Service <b>{bot_name}</b>: Unavailable üî¥{reason}",
        "watchdog_status_down_reason": "Reason",
        "watchdog_status_down_failed": "Status: failed",
        "watchdog_restart_fail": "‚ö†Ô∏è Alert system FAILED to send restart command for <b>{service_name}</b>. Manual check required.\nError: {error}",
        "watchdog_systemctl_not_found": "‚ö†Ô∏è <code>systemctl</code> not found. Cannot check service status.",
        "watchdog_check_error": "‚ö†Ô∏è Error checking service status: {error}",
        "watchdog_started": "üö® Internal 'Alert System' service started.\nTracking: <b>{bot_name}</b>",

        # modules/fail2ban.py
        "f2b_log_not_found": "‚ö†Ô∏è Fail2Ban log file not found: <code>{path}</code>",
        "f2b_log_read_error": "Could not read log file.",
        "f2b_banned": "Banned",
        "f2b_already_banned": "Already banned",
        "f2b_header": "üîí <b>Last 10 IP bans (Fail2Ban):</b>\n\n{log_output}",
        "f2b_no_bans": "üîí No recent IP bans found in Fail2Ban logs (checked last 50 lines).",
        "f2b_read_error_generic": "‚ö†Ô∏è Error reading Fail2Ban log: {error}",
        "f2b_ban_entry": "üîí <b>{ban_type}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ Time: <b>{time}</b>{tz}\nüóìÔ∏è Date: <b>{date}</b>",

        # modules/logs.py
        "logs_header": "üìú <b>Recent system logs:</b>\n<pre>{log_output}</pre>",
        "logs_read_error": "‚ö†Ô∏è Error reading logs: {error}",

        # modules/notifications.py
        "notifications_menu_title": "üîî <b>Notification Settings</b>\n\nChoose which alerts you want to receive.",
        "notifications_toggle_alert": "Notifications '{alert_name}' {status}",
        "notifications_status_on": "‚úÖ ENABLED",
        "notifications_status_off": "‚ùå DISABLED",
        "notifications_alert_name_res": "Resources",
        "notifications_alert_name_logins": "SSH Logins/Logouts",
        "notifications_alert_name_bans": "Bans",
        "notifications_downtime_stub": "‚è≥ Server downtime notifications are under development.\nFor now, we recommend using an external monitoring service (e.g., UptimeRobot).",
        "alert_ssh_login_detected": "üîî <b>SSH Login Detected</b>\n\nüë§ User: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ Time: <b>{time}</b>{tz}",
        "alert_f2b_ban_detected": "üõ°Ô∏è <b>Fail2Ban Banned IP</b>\n\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ Time: <b>{time}</b>{tz}",
        "alert_cpu_high": "‚ö†Ô∏è <b>CPU Threshold Exceeded!</b>\nCurrent usage: <b>{usage:.1f}%</b> (Threshold: {threshold}%)",
        "alert_cpu_high_repeat": "‚ÄºÔ∏è <b>CPU Still HIGH!</b>\nCurrent usage: <b>{usage:.1f}%</b> (Threshold: {threshold}%)",
        "alert_cpu_normal": "‚úÖ <b>CPU load normalized.</b>\nCurrent usage: <b>{usage:.1f}%</b>",
        "alert_ram_high": "‚ö†Ô∏è <b>RAM Threshold Exceeded!</b>\nCurrent usage: <b>{usage:.1f}%</b> (Threshold: {threshold}%)",
        "alert_ram_high_repeat": "‚ÄºÔ∏è <b>RAM Still HIGH!</b>\nCurrent usage: <b>{usage:.1f}%</b> (Threshold: {threshold}%)",
        "alert_ram_normal": "‚úÖ <b>RAM usage normalized.</b>\nCurrent usage: <b>{usage:.1f}%</b>",
        "alert_disk_high": "‚ö†Ô∏è <b>Disk Threshold Exceeded!</b>\nCurrent usage: <b>{usage:.1f}%</b> (Threshold: {threshold}%)",
        "alert_disk_high_repeat": "‚ÄºÔ∏è <b>Disk Still HIGH!</b>\nCurrent usage: <b>{usage:.1f}%</b> (Threshold: {threshold}%)",
        "alert_disk_normal": "‚úÖ <b>Disk usage normalized.</b>\nCurrent usage: <b>{usage:.1f}%</b>",

        # modules/optimize.py
        "optimize_start": "‚è≥ <b>Starting system optimization...</b>\n\nThis is a very long process (5-15 minutes).\nPlease do not restart the bot or run other commands.",
        "optimize_success": "‚úÖ <b>Optimization completed successfully!</b>\n\n<b>Last 1000 characters of output (including sysctl):</b>\n<pre>{output}</pre>",
        "optimize_fail": "‚ùå <b>Error during optimization!</b>\n\n<b>Return Code:</b> {code}\n<b>STDOUT (last 1000):</b>\n<pre>{stdout}</pre>\n<b>STDERR (last 2000):</b>\n<pre>{stderr}</pre>",

        # modules/reboot.py
        "reboot_confirm_prompt": "‚ö†Ô∏è Are you sure you want to <b>reboot the server</b>? All active connections will be lost.",
        "reboot_confirmed": "‚úÖ Confirmed. <b>Issuing VPS reboot</b>...",
        "reboot_error": "‚ö†Ô∏è Error sending reboot command: {error}",

        # modules/restart.py
        "restart_start": "‚ôªÔ∏è Bot is restarting‚Ä¶",
        "restart_error": "‚ö†Ô∏è Error trying to restart service: {error}",

        # modules/selftest.py
        "selftest_gathering_info": "üîç Gathering server info...",
        "selftest_error": "‚ö†Ô∏è Error gathering system stats: {error}",
        "selftest_inet_ok": "‚úÖ Internet available",
        "selftest_inet_fail": "‚ùå No internet",
        "selftest_ip_fail": "Could not determine",
        "selftest_ssh_source": "(from {source})",
        "selftest_ssh_source_journal": "(from journalctl)",
        "selftest_ssh_header": "\n\nüìÑ <b>Last SSH login{source}:</b>\n",
        "selftest_ssh_entry": "üë§ <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ Time: <b>{time}</b>{tz}\nüóìÔ∏è Date: <b>{date}</b>",
        "selftest_ssh_parse_fail": "Could not parse log line.",
        "selftest_ssh_not_found": "No entries found.",
        "selftest_ssh_read_error": "‚è≥ Error reading logs: {error}",
        "selftest_ssh_root_only": "\n\nüìÑ <b>Last SSH login:</b>\n<i>Info available in root mode only</i>",
        "selftest_results_header": "üõ† <b>Server Status:</b>\n\n",
        "selftest_results_body": "‚úÖ Bot is running\nüìä CPU: <b>{cpu:.1f}%</b>\nüíæ RAM: <b>{mem:.1f}%</b>\nüíΩ Disk: <b>{disk:.1f}%</b>\n‚è± Uptime: <b>{uptime}</b>\n{inet_status}\n‚åõ Ping (8.8.8.8): <b>{ping} ms</b>\nüåê External IP: <code>{ip}</code>\nüì° Traffic ‚¨á <b>{rx}</b> / ‚¨Ü <b>{tx}</b>",

        # modules/speedtest.py
        "speedtest_start": "üöÄ Starting speedtest... This may take up to a minute.",
        "speedtest_results": "üöÄ <b>Speedtest Results:</b>\n\n‚¨áÔ∏è <b>Download:</b> {dl:.2f} Mbps\n‚¨ÜÔ∏è <b>Upload:</b> {ul:.2f} Mbps\n‚è± <b>Ping:</b> {ping} ms\n\nüè¢ <b>Server:</b> {server} ({location})\nüîó <b>Details:</b> {url}",
        "speedtest_fail": "‚ùå Error running speedtest:\n<pre>{error}</pre>",

        # modules/sshlog.py
        "sshlog_searching": "üîç Searching for last 10 SSH events (login/fail)...",
        "sshlog_header": "üîê <b>Last {count} SSH events{source}:</b>\n\n{log_output}",
        "sshlog_not_found": "üîê No SSH events (login/fail) found{source}.",
        "sshlog_read_error": "‚ö†Ô∏è Error reading SSH log: {error}",
        "sshlog_entry_success": "‚úÖ <b>Successful login</b>\nüë§ User: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",
        "sshlog_entry_invalid_user": "‚ùå <b>Invalid user</b>\nüë§ Attempt: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",
        "sshlog_entry_wrong_pass": "‚ùå <b>Failed password</b>\nüë§ User: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",
        "sshlog_entry_fail_pam": "‚ùå <b>Failure (PAM)</b>\nüë§ User: <b>{user}</b>\nüåç IP: <b>{flag} {ip}</b>\n‚è∞ {time}{tz} ({date})",

        # modules/top.py
        "top_header": "üî• <b>Top 10 processes by CPU load:</b>\n<pre>{output}</pre>",
        "top_fail": "‚ùå Error getting process list:\n<pre>{error}</pre>",

        # modules/traffic.py
        "traffic_stop": "‚úÖ Traffic monitoring stopped.",
        "traffic_menu_return": "üè† Main menu:",
        "traffic_start": "üì° <b>Traffic monitoring enabled</b>...\n\n<i>Updates every 5 seconds. Press 'üì° Network Traffic' again to stop.</i>",
        "traffic_start_fail": "‚ö†Ô∏è Failed to start traffic monitoring: {error}",
        "traffic_update_total": "üì° Total Traffic:",
        "traffic_update_speed": "‚ö°Ô∏è Connection Speed:",
        "traffic_rx": "‚¨áÔ∏è RX: {value}",
        "traffic_tx": "‚¨ÜÔ∏è TX: {value}",
        "traffic_speed_rx": "‚¨áÔ∏è RX: {speed:.2f} Mbps",
        "traffic_speed_tx": "‚¨ÜÔ∏è TX: {speed:.2f} Mbps",

        # modules/update.py
        "update_start": "üîÑ Updating VPS... This may take a few minutes.",
        "update_success": "‚úÖ Update complete:\n<pre>{output}</pre>",
        "update_fail": "‚ùå Error during update (Code: {code}):\n<pre>{error}</pre>",

        # modules/uptime.py
        "uptime_text": "‚è± Uptime: <b>{uptime}</b>",
        "uptime_fail": "‚ö†Ô∏è Error getting uptime: {error}",

        # modules/vless.py
        "vless_prompt_file": "üì§ <b>Send your Xray configuration file (JSON)</b>\n\n<i>Important: The file must contain a working outbound configuration with Reality.</i>",
        "vless_error_not_json": "‚õî <b>Error:</b> File must be in <code>.json</code> format.\n\nPlease try sending the file again.",
        "vless_prompt_name": "‚úÖ JSON file received.\n\nNow, <b>enter a name</b> for this VLESS link (e.g., 'My_Server_1'):",
        "vless_error_file_processing": "‚ö†Ô∏è An error occurred while processing the file: {error}",
        "vless_error_no_json_session": "‚ö†Ô∏è Error: JSON data not found in session. Please try again from the beginning.",
        "vless_success_caption": "‚úÖ Your VLESS link named '<b>{name}</b>' is ready:\n\n<code>{url}</code>",
        "vless_menu_return": "üè† Returning to main menu.",
        "vless_error_not_file": "‚õî Please send a <b>document</b> (file), not text.",
        "vless_error_not_text": "‚õî Please send a <b>text name</b>.",

        # modules/xray.py
        "xray_detecting": "üîç Detecting installed Xray client...",
        "xray_detect_fail": "‚ùå Could not detect a supported Xray client (Marzban, Amnezia). Update aborted.",
        "xray_detected_start_update": "‚úÖ Detected: <b>{client}</b> (container: <code>{container}</code>). Starting update...",
        "xray_update_error": "Update process for {client} failed:\n<pre>{error}</pre>",
        "xray_update_success": "‚úÖ Xray for <b>{client}</b> successfully updated to version <b>{version}</b>",
        "xray_error_generic": "‚ö†Ô∏è <b>Xray Update Error:</b>\n\n{error}",
        "xray_version_unknown": "unknown",

        # modules/users.py (–î–æ–±–∞–≤–ª–µ–Ω–∏—è)
        "users_group_Admins": "Admins",
        "users_group_–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏": "Users",
    }
}

# --- –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò –Ø–ó–´–ö–ê ---

def load_user_settings():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–∫–ª—é—á–∞—è —è–∑—ã–∫) –∏–∑ JSON."""
    try:
        if os.path.exists(config.USER_SETTINGS_FILE):
            with open(config.USER_SETTINGS_FILE, "r", encoding='utf-8') as f:
                settings = json.load(f)
                shared_state.USER_SETTINGS = {int(k): v for k, v in settings.items()}
            logging.info("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—è–∑—ã–∫–∏) –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
        else:
            shared_state.USER_SETTINGS = {}
            logging.info("–§–∞–π–ª user_settings.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—É—Å—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ user_settings.json: {e}")
        shared_state.USER_SETTINGS = {}

def save_user_settings():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–∫–ª—é—á–∞—è —è–∑—ã–∫) –≤ JSON."""
    try:
        os.makedirs(os.path.dirname(config.USER_SETTINGS_FILE), exist_ok=True)
        settings_to_save = {str(k): v for k, v in shared_state.USER_SETTINGS.items()}
        with open(config.USER_SETTINGS_FILE, "w", encoding='utf-8') as f:
            json.dump(settings_to_save, f, indent=4, ensure_ascii=False)
        logging.debug("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—è–∑—ã–∫–∏) —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è user_settings.json: {e}")

def get_user_lang(user_id: int) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 'ru' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."""
    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø user_id ---
    if not isinstance(user_id, int):
        try:
            user_id = int(user_id)
        except (ValueError, TypeError):
            logging.warning(f"get_user_lang –≤—ã–∑–≤–∞–Ω —Å –Ω–µ—á–∏—Å–ª–æ–≤—ã–º user_id: {user_id}. –í–æ–∑–≤—Ä–∞—â–∞—é —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
            return config.DEFAULT_LANGUAGE
    # ----------------------------------------
    return shared_state.USER_SETTINGS.get(user_id, {}).get("lang", config.DEFAULT_LANGUAGE)

def set_user_lang(user_id: int, lang: str):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —è–∑—ã–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç."""
    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø user_id ---
    if not isinstance(user_id, int):
        try:
            user_id = int(user_id)
        except (ValueError, TypeError):
            logging.error(f"set_user_lang –≤—ã–∑–≤–∞–Ω —Å –Ω–µ—á–∏—Å–ª–æ–≤—ã–º user_id: {user_id}. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
            return
    # ----------------------------------------
    if user_id not in shared_state.USER_SETTINGS:
        shared_state.USER_SETTINGS[user_id] = {}
    shared_state.USER_SETTINGS[user_id]["lang"] = lang
    save_user_settings()
    logging.info(f"–Ø–∑—ã–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '{lang}'")

# --- –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–ï–†–ï–í–û–î–ê ---

def _(key: str, user_id_or_lang: int | str | None, **kwargs) -> str: # –î–æ–±–∞–≤–∏–ª–∏ None
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É.
    –ü—Ä–∏–º–µ—Ä: _("main_menu_welcome", user_id)
    –ü—Ä–∏–º–µ—Ä —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º: _("my_id_text", user_id, user_id=user_id)
    """
    lang = user_id_or_lang
    if isinstance(user_id_or_lang, int):
        lang = get_user_lang(user_id_or_lang)
    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—Ä–∞–±–æ—Ç–∫–∞ None ---
    elif user_id_or_lang is None:
        lang = config.DEFAULT_LANGUAGE
    # ----------------------------------

    if lang not in STRINGS:
        lang = config.DEFAULT_LANGUAGE

    string_template = STRINGS.get(lang, {}).get(key,
        STRINGS.get(config.DEFAULT_LANGUAGE, {}).get(key, f"[{key}]")
    )

    try:
        return string_template.format(**kwargs)
    except (KeyError, TypeError, ValueError): # –î–æ–±–∞–≤–∏–ª–∏ ValueError
        # –ï—Å–ª–∏ .format() –Ω–µ —É–¥–∞–ª—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ—Ç kwargs, –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø)
        logging.warning(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–ª—é—á–∞ '{key}' —è–∑—ã–∫–∞ '{lang}' —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ {kwargs}. –®–∞–±–ª–æ–Ω: '{string_template}'")
        return string_template # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω

# --- –§–ò–õ–¨–¢–†–´ –î–õ–Ø AIOGRAM ---

def get_all_translations(key: str) -> list[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∫–ª—é—á–∞.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è aiogram F.text.in_([...])
    """
    translations = []
    for lang_strings in STRINGS.values():
        if key in lang_strings:
            translations.append(lang_strings[key])
    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è + –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π
    unique_translations = list(set(translations))
    if not unique_translations:
        logging.error(f"–ö–ª—é—á –ø–µ—Ä–µ–≤–æ–¥–∞ '{key}' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–º —è–∑—ã–∫–µ!")
        return [f"[{key}]"] # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª—é—á –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    return unique_translations

def I18nFilter(key: str):
    """
    –°–æ–∑–¥–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä Aiogram, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –õ–Æ–ë–´–ú –ø–µ—Ä–µ–≤–æ–¥–æ–º —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞.
    """
    return F.text.in_(get_all_translations(key))

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ ---
def get_language_keyboard() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="set_lang_ru"),
            InlineKeyboardButton(text="üá¨üáß English", callback_data="set_lang_en")
        ]
    ])
    return keyboard