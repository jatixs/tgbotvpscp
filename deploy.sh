#!/bin/bash

BOT_INSTALL_PATH="/opt/tg-bot"
SERVICE_NAME="tg-bot"
SERVICE_USER="tgbot"
PYTHON_BIN="/usr/bin/python3"
VENV_PATH="${BOT_INSTALL_PATH}/venv"
BOT_PY_URL="https://raw.githubusercontent.com/jatixs/tgbotvpscp/main/bot.py"
REQUIREMENTS_URL="https://raw.githubusercontent.com/jatixs/tgbotvpscp/main/requirements.txt"

C_RESET='\033[0m'
C_RED='\033[0;31m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_BLUE='\033[0;34m'
C_CYAN='\033[0;36m'
C_BOLD='\033[1m'

msg_info() { echo -e "${C_CYAN}üîµ $1${C_RESET}"; }
msg_success() { echo -e "${C_GREEN}‚úÖ $1${C_RESET}"; }
msg_warning() { echo -e "${C_YELLOW}‚ö†Ô∏è  $1${C_RESET}"; }
msg_error() { echo -e "${C_RED}‚ùå $1${C_RESET}"; }
msg_question() { read -p "$(echo -e "${C_YELLOW}‚ùì $1${C_RESET}")" $2; }

spinner() {
    local pid=$1
    local msg=$2
    local spin='|/-\'
    local i=0
    while kill -0 $pid 2>/dev/null; do
        i=$(( (i+1) %4 ))
        printf "\r${C_BLUE}‚è≥ ${spin:$i:1} ${msg}...${C_RESET}"
        sleep .1
    done
    printf "\r"
}

run_with_spinner() {
    local msg=$1
    shift
    "$@" > /dev/null 2>&1 &
    local pid=$!
    spinner $pid "$msg"
    wait $pid
    return $?
}

if command -v curl &> /dev/null; then
    DOWNLOADER="curl -sSLf"
    DOWNLOADER_PIPE="curl -s"
elif command -v wget &> /dev/null; then
    DOWNLOADER="wget -qO-"
    DOWNLOADER_PIPE="wget -qO-"
else
    msg_error "–ù–∏ curl, –Ω–∏ wget –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö."
    exit 1
fi

install_extras() {
    if ! command -v fail2ban-client &> /dev/null; then
        msg_question "Fail2Ban –Ω–µ –Ω–∞–π–¥–µ–Ω. –•–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏? (y/n): " INSTALL_F2B
        if [[ "$INSTALL_F2B" =~ ^[Yy]$ ]]; then
            run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fail2Ban" sudo apt install -y fail2ban
            sudo systemctl enable fail2ban &> /dev/null
            sudo systemctl start fail2ban &> /dev/null
            msg_success "Fail2Ban —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω."
        else
            msg_info "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Fail2Ban."
        fi
    else
        msg_success "Fail2Ban —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi

    if ! command -v speedtest &> /dev/null; then
        msg_question "Speedtest-CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –•–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–µ—Ç–∏? (y/n): " INSTALL_SPEEDTEST
        if [[ "$INSTALL_SPEEDTEST" =~ ^[Yy]$ ]]; then
            if [ -f /etc/os-release ]; then
                . /etc/os-release
                if [ "$VERSION_CODENAME" == "noble" ]; then
                    msg_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Ubuntu Noble. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏."
                    ${DOWNLOADER_PIPE} https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash &> /dev/null
                    sudo sed -i 's/noble/jammy/g' /etc/apt/sources.list.d/ookla_speedtest-cli.list
                    run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤" sudo apt update -y
                    run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Speedtest" sudo apt-get install -y speedtest
                else
                    run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Speedtest-CLI" sudo apt install -y speedtest-cli
                fi
            else
                 run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Speedtest-CLI" sudo apt install -y speedtest-cli
            fi
            msg_success "Speedtest-CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
        else
            msg_info "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Speedtest-CLI."
        fi
    else
        msg_success "Speedtest-CLI —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi
}

common_install_steps() {
    msg_info "1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤" sudo apt update -y
    run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (python, git, curl...)" sudo apt install -y python3 python3-pip python3-venv git curl wget sudo rsync docker.io
    if [ $? -ne 0 ]; then
        msg_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤."
        exit 1
    fi

    install_extras
    sudo mkdir -p ${BOT_INSTALL_PATH}

    msg_info "3. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ GitHub..."
    if ! ${DOWNLOADER} "${BOT_PY_URL}" | sudo tee "${BOT_INSTALL_PATH}/bot.py" > /dev/null; then
        msg_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å bot.py. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –¥–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç."
        exit 1
    fi
    if ! ${DOWNLOADER} "${REQUIREMENTS_URL}" | sudo tee "${BOT_INSTALL_PATH}/requirements.txt" > /dev/null; then
        msg_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å requirements.txt. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –¥–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç."
        exit 1
    fi
}

install_logic() {
    local mode=$1
    if [ "$mode" == "secure" ]; then
        msg_info "2. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '${SERVICE_USER}'..."
        if ! id "${SERVICE_USER}" &>/dev/null; then
            sudo useradd -r -s /bin/false -d ${BOT_INSTALL_PATH} ${SERVICE_USER}
        fi
        sudo chown -R ${SERVICE_USER}:${SERVICE_USER} ${BOT_INSTALL_PATH}
        sudo chmod -R 750 ${BOT_INSTALL_PATH}
        local exec_user_cmd="sudo -u ${SERVICE_USER}"
    else
        sudo chown -R root:root ${BOT_INSTALL_PATH}
        sudo chmod -R 755 ${BOT_INSTALL_PATH}
    fi

    msg_info "4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python..."
    pushd ${BOT_INSTALL_PATH} > /dev/null || { msg_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ ${BOT_INSTALL_PATH}"; exit 1; }
    
    if [ ! -d "${VENV_PATH}" ]; then
        run_with_spinner "–°–æ–∑–¥–∞–Ω–∏–µ venv" $exec_user_cmd ${PYTHON_BIN} -m venv venv
    fi
    
    run_with_spinner "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip" $exec_user_cmd ${VENV_PATH}/bin/pip install --upgrade pip
    run_with_spinner "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python" $exec_user_cmd ${VENV_PATH}/bin/pip install -r requirements.txt
    if [ $? -ne 0 ]; then
        msg_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python."
        popd > /dev/null
        exit 1
    fi

    msg_info "5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    msg_question "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram Bot Token: " TG_BOT_TOKEN_USER
    msg_question "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram User ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã): " TG_ADMIN_ID_USER

    sudo tee .env > /dev/null <<EOF
TG_BOT_TOKEN="${TG_BOT_TOKEN_USER}"
TG_ADMIN_ID="${TG_ADMIN_ID_USER}"
INSTALL_MODE="${mode}"
EOF

    local owner="root:root"
    if [ "$mode" == "secure" ]; then owner="${SERVICE_USER}:${SERVICE_USER}"; fi
    sudo chown ${owner} .env
    sudo chmod 600 .env
    popd > /dev/null
    
    if [ "$mode" == "root" ]; then
      msg_info "6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ sudo –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'root'..."
      SUDOERS_FILE="/etc/sudoers.d/98-${SERVICE_NAME}-root"
      sudo tee ${SUDOERS_FILE} > /dev/null <<EOF
root ALL=(ALL) NOPASSWD: /bin/systemctl restart ${SERVICE_NAME}.service
root ALL=(ALL) NOPASSWD: /sbin/reboot
EOF
      sudo chmod 440 ${SUDOERS_FILE}
    fi

    create_and_start_service $mode
}

install_secure() {
    echo -e "\n${C_BOLD}=== –ù–∞—á–∞–ª–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (–æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) ===${C_RESET}"
    common_install_steps
    install_logic "secure"
}

install_root() {
    echo -e "\n${C_BOLD}=== –ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç –∏–º–µ–Ω–∏ Root ===${C_RESET}"
    common_install_steps
    install_logic "root"
}

create_and_start_service() {
    local mode=$1
    local user="root"
    local group="root"
    local desc_mode="Root Mode"
    if [ "$mode" == "secure" ]; then
        user=${SERVICE_USER}
        group=${SERVICE_USER}
        desc_mode="Secure Mode"
    fi
    
    msg_info "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
    sudo tee ${SERVICE_FILE} > /dev/null <<EOF
[Unit]
Description=${SERVICE_NAME} Telegram Bot (${desc_mode})
After=network.target

[Service]
Restart=always
RestartSec=5
User=${user}
Group=${group}
WorkingDirectory=${BOT_INSTALL_PATH}
EnvironmentFile=${BOT_INSTALL_PATH}/.env
ExecStart=${VENV_PATH}/bin/python ${BOT_INSTALL_PATH}/bot.py

[Install]
WantedBy=multi-user.target
EOF

    msg_info "–ó–∞–ø—É—Å–∫ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞..."
    sudo systemctl daemon-reload
    sudo systemctl enable ${SERVICE_NAME}.service &> /dev/null
    sudo systemctl start ${SERVICE_NAME}.service

    sleep 2

    if sudo systemctl is-active --quiet ${SERVICE_NAME}.service; then
        msg_success "–°–µ—Ä–≤–∏—Å ${SERVICE_NAME} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
        msg_info "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: sudo systemctl status ${SERVICE_NAME}"
        echo -e "\n${C_GREEN}${C_BOLD}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /start.${C_RESET}\n"
    else
        msg_error "–°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo journalctl -u ${SERVICE_NAME} -xe"
        exit 1
    fi
}

uninstall_bot() {
    echo -e "\n${C_BOLD}=== –ù–∞—á–∞–ª–æ —É–¥–∞–ª–µ–Ω–∏—è Telegram-–±–æ—Ç–∞ ===${C_RESET}"

    msg_info "1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞..."
    if systemctl list-units --full -all | grep -q "${SERVICE_NAME}.service"; then
        sudo systemctl stop ${SERVICE_NAME} &> /dev/null
        sudo systemctl disable ${SERVICE_NAME} &> /dev/null
    fi

    msg_info "2. –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    sudo rm -f "/etc/systemd/system/${SERVICE_NAME}.service"
    sudo rm -f "/etc/sudoers.d/98-${SERVICE_NAME}-root"
    sudo systemctl daemon-reload

    msg_info "3. –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –±–æ—Ç–æ–º..."
    sudo rm -rf "${BOT_INSTALL_PATH}"

    msg_info "4. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)..."
    if id "${SERVICE_USER}" &>/dev/null; then
        sudo userdel -r "${SERVICE_USER}"
    fi

    msg_success "–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
}

update_bot() {
    echo -e "\n${C_BOLD}=== –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è bot.py ===${C_RESET}"
    if [ ! -f "${BOT_INSTALL_PATH}/bot.py" ]; then
        msg_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ ${BOT_INSTALL_PATH}."
        exit 1
    fi

    msg_info "1. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ —è–¥—Ä–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    if ${DOWNLOADER} "${BOT_PY_URL}" | sudo tee "${BOT_INSTALL_PATH}/bot.py" > /dev/null; then
        msg_success "–§–∞–π–ª bot.py —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω."
    else
        msg_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL."
        exit 1
    fi

    msg_info "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    if sudo systemctl restart ${SERVICE_NAME}; then
        msg_success "–°–µ—Ä–≤–∏—Å ${SERVICE_NAME} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω."
        echo -e "\n${C_GREEN}${C_BOLD}üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${C_RESET}\n"
    else
        msg_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ. –õ–æ–≥–∏: sudo journalctl -u ${SERVICE_NAME} -xe"
        exit 1
    fi
}

main_menu() {
    clear
    echo -e "${C_BLUE}${C_BOLD}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                                                      ‚ïë"
    echo "‚ïë          –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Telegram-–±–æ—Ç–æ–º            ‚ïë"
    echo "‚ïë                                                      ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${C_RESET}"
    echo -e "${C_GREEN}  1)${C_RESET} ${C_BOLD}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (Secure):${C_RESET} –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π, –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º"
    echo -e "${C_YELLOW}  2)${C_RESET} ${C_BOLD}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (Root):${C_RESET}   –ú–µ–Ω–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π, –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø"
    echo -e "${C_CYAN}  3)${C_RESET} ${C_BOLD}–û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞:${C_RESET}         –°–∫–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é bot.py"
    echo -e "${C_RED}  4)${C_RESET} ${C_BOLD}–£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞:${C_RESET}          –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞"
    echo -e "  5) ${C_BOLD}–í—ã—Ö–æ–¥${C_RESET}"
    echo "--------------------------------------------------------"
    read -p "$(echo -e "${C_BOLD}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–ø—Ü–∏–∏ [1-5]: ${C_RESET}")" choice

    case $choice in
        1) install_secure ;;
        2)
            if [ "$(id -u)" -ne 0 ]; then
                msg_error "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç –∏–º–µ–Ω–∏ root, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å 'sudo'."
                exit 1
            fi
            install_root
            ;;
        3) update_bot ;;
        4)
            msg_question "–í–´ –£–í–ï–†–ï–ù–´, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ü–û–õ–ù–û–°–¢–¨–Æ —É–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞? (y/n): " confirm_uninstall
            if [[ "$confirm_uninstall" =~ ^[Yy]$ ]]; then
                uninstall_bot
            else
                msg_info "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."
            fi
            ;;
        5) exit 0 ;;
        *) msg_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." ;;
    esac
}

main_menu